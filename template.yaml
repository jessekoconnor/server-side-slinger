# SAM documentation can be found here:
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
    Server Side Slinger Template

    Serverless Architecture Model template for Server Side Slinger

# Global variables
Globals:
    Function:
        Timeout: 3
        Environment:
            Variables:
                TABLE_NAME: !Ref WidgetCache
                DISABLE_WIDGET_CACHE: false
                LOCAL_LAMBDA: false
        CodeUri: src/
        Runtime: nodejs12.x
        MemorySize: 1600
        Timeout: 30

Resources:
    # -------------------
    # Dashboards
    # ----------
    Lifestyle:
        Type: AWS::Serverless::Function
        DependsOn:
            - PressRoom
            - 3BridgesYoga
            - BlazeYoga
        Properties:
            Handler: components/Dashboard.lambdaHandler
            CodeUri: src/
            Policies:
            - DynamoDBCrudPolicy:
                TableName: !Ref WidgetCache
            - LambdaInvokePolicy:
                FunctionName: "*"
            Environment: # Reference the widget lambdas
                Variables:
                    TABLE_NAME: !Ref WidgetCache
                    DashboardName: "Lifestyle"
                    Function1: !Ref 3BridgesYoga
                    Function2: !Ref BlazeYoga
                    Function3: !Ref PressRoom
            Events:
                BasicCase:
                    Type: Api 
                    Properties:
                        Path: /lifestyle
                        Method: get
 
    # -------------------
    # Widgets
    # ----------

    # Scrape Press Room for local music
    PressRoom:
        Type: AWS::Serverless::Function
        Properties:
            Handler: widgets/PressRoom.lambdaHandler
            CodeUri: src/
            Policies:
            - DynamoDBCrudPolicy:
                  TableName: !Ref WidgetCache
            Environment: 
                Variables:
                    TABLE_NAME: !Ref WidgetCache
            Events:
                BasicCase:
                    Type: Api 
                    Properties:
                        Path: /pressRoom
                        Method: get

    # Scrape 3 bridges yoga for classes
    3BridgesYoga:
        Type: AWS::Serverless::Function
        Properties:
            Handler: widgets/3BridgesYoga.lambdaHandler
            CodeUri: src/
            Policies:
            - DynamoDBCrudPolicy:
                  TableName: !Ref WidgetCache
            Environment: 
                Variables:
                    TABLE_NAME: !Ref WidgetCache
            Events:
                BasicCase:
                    Type: Api 
                    Properties:
                        Path: /3by
                        Method: get

    # Scrape blaze yoga for classes
    BlazeYoga:
        Type: AWS::Serverless::Function
        Properties:
            Handler: widgets/BlazeYoga.lambdaHandler
            CodeUri: src/
            Policies:
            - DynamoDBCrudPolicy:
                  TableName: !Ref WidgetCache
            Environment: 
                Variables:
                    TABLE_NAME: !Ref WidgetCache
            Events:
                BasicCase:
                    Type: Api 
                    Properties:
                        Path: /blaze
                        Method: get
    
    # -------------------
    # Caches
    # ----------
    WidgetCache:
        Type: AWS::Serverless::SimpleTable
        Properties:
            TableName: widget-cache
